---
interface Props {
	title: string;
	body: string;
	href: string;
}

const { href, title, body } = Astro.props;
---

<li class="link-card">
	<a href={href}>
		<h2>
			{title}
			<span>&rarr;</span>
		</h2>
		<p>
			{body}
		</p>
	</a>
</li>

<h1>Some Cool Set of Grainy Cards</h1>

<div class="container">
  <div class="row">
    <div class="card">
      <div class="border"></div>
      <div class="filter"></div>
      <h2>First Card</h2>
      <p>Wow! Such an interesting card!<br>Wanna hover over it?</p>
      <div class="shadow"></div>
      <div class="backdrop"></div>
    </div>

    <div class="card">
      <div class="border"></div>
      <div class="filter"></div>
      <h2>Second Card</h2>
      <p>WOW! Another card.<br>Even better than the last one.</p>
      <div class="shadow"></div>
      <div class="backdrop"></div>
    </div>

    <div class="card">
      <div class="border"></div>
      <div class="filter"></div>
      <h2>Third Card</h2>
      <p>Hehe... Yet another one.<br>Can't get enough of 'em.</p>
      <div class="shadow"></div>
      <div class="backdrop"></div>
    </div>
 </div>
  
 <div class="row">
   <div class="card">
     <div class="border"></div>
     <div class="filter"></div>
    <h2>Fourth...</h2>
    <p>Seriously though.<br>Three would've been enough.</p>
     <div class="shadow"></div>
     <div class="backdrop"></div>
  </div>
  
  <div class="card">
    <div class="border"></div>
    <div class="filter"></div>
    <h2>The Fifth</h2>
    <p>Okay, this is getting out of hand.<br>But hover over this one too, I guess.</p>
    <div class="shadow"></div>
    <div class="backdrop"></div>
  </div>
  
  <div class="card">
    <div class="border"></div>
    <div class="filter"></div>
    <h2>Last One.</h2>
    <p>Phew! Finally. The very last card.<br>Well, hope this has been fun...</p>
    <div class="shadow"></div>
    <div class="backdrop"></div>
  </div>
 </div>
</div>

<div class="button card">
  <div class="border"></div>
    <div class="filter2"></div>
    <a href="https://dribbble.com/shots/21258560-Daily-Design-Code-4-Grainy-Gradient-Card-Button" target="_blank">View Design</a>
    <div class="shadow"></div>
    <div class="backdrop2"></div>
</div>

<div class="circle one"></div>
<div class="circle two"></div>

<svg>
  <filter id='noiseFilter'>
    <feTurbulence 
      type='fractalNoise' 
      baseFrequency='0.6' 
      stitchTiles='stitch'/>
  </filter>
</svg>

<svg>
  <filter id='noiseFilter2'>
    <feTurbulence 
      type='fractalNoise' 
      baseFrequency='0.6' 
      stitchTiles='stitch'/>
  </filter>
  <clipPath id="rounded-clip">
        <rect x="0" y="0" width="300" height="300" rx="20" ry="20"/>
  </clipPath>
</svg>

<svg>
  <filter id='noiseFilter3'>
    <feTurbulence 
      type='fractalNoise' 
      baseFrequency='0.6' 
      stitchTiles='stitch'/>
  </filter>
  <clipPath id="rounded-clip2">
        <rect x="0" y="0" width="230" height="70" rx="20" ry="20"/>
  </clipPath>
</svg>




<style>
:root {
  --bg: #080B12;
  --text: #CFB3E6;
  --border-grd1: #6C6499;
  --border-grd2: #111222;
  --card-grd1: #1F193D;
  --card-grd2: #05060D;
  --radial-center: rgba(173,155,255,0.3);
  --radial-edge: rgba(11,12,22,0.3);
  --shadow: rgba(173,155,255,0.5);
}


body {
  height: 100vh;
  
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 3em;
  
  background-color: var(--bg);
  font-family: "Recoleta";
  
  margin: 1em;
  box-sizing: border-box;
  
  color: var(--text);
  transition: all ease 0.3s;
}

h1 {
  font-weight: normal;
  font-size: 40px;
  text-align: center;
}

h2 {
  font-size: 34px;
  font-weight: normal;
}

p {
  font-size: 16px;
}


body::before,
body::after {
  position: absolute;
  left: 0;
  top: 0;
  content: '';
  width: 100%;
  height: 100%;
  z-index: -1;
  opacity: 10%;
}

body::before {
  background: #0C101B;
  filter: url(#noiseFilter);
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 3em;
  width: 100%;
  height: fit-content;
}

.row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  gap: 3em;
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  width: 300px;
  position: relative;
  background: linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  border-radius: 20px;
  transition: all ease 0.3s;
  filter: drop-shadow(0px 0px 0px rgb(173,155,255,0));
  z-index: 1;
}

.card > p {
  text-align: center;
}

.border {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 2;
  border-radius: 20px;
  border: 1px solid transparent;
  background: linear-gradient(135deg,var(--border-grd1),var(--border-grd2)) border-box;
  -webkit-mask:
     linear-gradient(#fff 0 0) padding-box, 
     linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
}

.filter {
  position: absolute;
  width: 300px;
  height: 300px;
  z-index: 2;
  background: #000;
  filter: url(#noiseFilter2);
  opacity: 16%;
  clip-path: url(#rounded-clip);
  mix-blend-mode: hard-light;
  transition: all ease 0.3s;
}

.backdrop {
  position: absolute;
  width: 100%;
  height: 100%;
  background: radial-gradient(circle at top, var(--radial-center), var(--radial-edge)), linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  z-index: -2;
  border-radius: 20px;
  opacity: 30%;
  transition: all ease 0.3s;
}

.shadow {
  position: absolute;
  height: 100%;
  width: 100%;
  border-radius: 20px;
  z-index: 1;
  box-shadow: 0px 0px 0px 0px rgb(173,155,255,0);
  transition: all ease 0.3s;
}


/* Hover */

.card:hover > .backdrop {
  width: 340px;
  height: 340px;
  background: radial-gradient(circle at top, var(--radial-center), var(--radial-edge)), linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  z-index: -2;
  border-radius: 33px;
  opacity: 30%;
  transition: all ease 0.3s;
}

.card:hover {
  background: radial-gradient(50% 90% at top, var(--radial-center), var(--radial-edge)), linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  z-index: 3;
  transition: all ease 0.3s;
}

.card:hover > .filter {
  opacity: 22%;
  transition: all ease 0.3s;
  mix-blend-mode: hard-light;
}

.card:hover > .shadow {
  box-shadow: 0px 4px 80px 10px rgb(173,155,255,0.4);
  z-index: 1;
  transition: all ease 0.3s;
}


/* Screen */

@media only screen and (max-width: 900px) {
  .row {
    flex-direction: column;
  }
}


/* Background effects */

.circle {
  height: 150px;
  width: 150px;
  position: absolute;
  background-color: #AD9BFF;
  filter: blur(150px);
  border-radius: 100px;
}

.one {
  left: 0;
  top: 0;
}

.two {
  bottom: 0;
  right: 0;
}




/* Button */

.button {
  height: 70px !important;
  width: 230px !important;
  
  
}

.filter2 {
  position: absolute;

  width: 230px;
  height: 70px;
  z-index: 2;
  background: #000;
  filter: url(#noiseFilter3);
  opacity: 16%;
  clip-path: url(#rounded-clip2);
  mix-blend-mode: hard-light;
  transition: all ease 0.3s;
}

a {
  text-decoration: none;
  color: inherit;
  font-size: 24px;
  height: 70px;
  align-items: center;
  display: flex;
  z-index: 5;
}

.backdrop2 {
  position: absolute;
  width: 230px;
  height: 70px;
  background: radial-gradient(circle at top, var(--radial-center), var(--radial-edge)), linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  z-index: -2;
  border-radius: 20px;
  opacity: 20%;
  transition: all ease 0.3s;
}

.card:hover > .backdrop2 {
  width: 260px;
  height: 100px;
  background: radial-gradient(circle at top, var(--radial-center), var(--radial-edge)), linear-gradient(135deg, var(--card-grd1), var(--card-grd2));
  z-index: -2;
  border-radius: 33px;
  opacity: 20%;
  transition: all ease 0.3s;
}




/* Not required */
.youtube {
  text-decoration: none;
  position: absolute;
  padding: 1em 2em;
  bottom: 1em;
  right: 1em;
  z-index: 9999;
  font-family: 'Roboto';
  color: #E1E1E1;
  border: 1px solid #e1e1e1;
  border-radius: 5px;
  font-size: 16px;
  height: auto;
}

.youtube:hover {
  background-color: rgb(225,225,225,0.14);
}
</style>
